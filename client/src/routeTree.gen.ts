/* eslint-disable */

// @ts-nocheck

// noinspection JSUnusedGlobalSymbols

// This file was automatically generated by TanStack Router.
// You should NOT make any changes in this file as it will be overwritten.
// Additionally, you should also exclude this file from your linter and/or formatter to prevent it from being checked or modified.

import { Route as rootRouteImport } from './routes/__root'
import { Route as IndexRouteImport } from './routes/index'
import { Route as SymptomsIndexRouteImport } from './routes/symptoms.index'
import { Route as SymptomsSymptomIdRouteImport } from './routes/symptoms.$symptomId'
import { Route as SymptomsSymptomIdSeverityRouteImport } from './routes/symptoms.$symptomId.$severity'

const IndexRoute = IndexRouteImport.update({
  id: '/',
  path: '/',
  getParentRoute: () => rootRouteImport,
} as any)
const SymptomsIndexRoute = SymptomsIndexRouteImport.update({
  id: '/symptoms/',
  path: '/symptoms/',
  getParentRoute: () => rootRouteImport,
} as any)
const SymptomsSymptomIdRoute = SymptomsSymptomIdRouteImport.update({
  id: '/symptoms/$symptomId',
  path: '/symptoms/$symptomId',
  getParentRoute: () => rootRouteImport,
} as any)
const SymptomsSymptomIdSeverityRoute =
  SymptomsSymptomIdSeverityRouteImport.update({
    id: '/$severity',
    path: '/$severity',
    getParentRoute: () => SymptomsSymptomIdRoute,
  } as any)

export interface FileRoutesByFullPath {
  '/': typeof IndexRoute
  '/symptoms/$symptomId': typeof SymptomsSymptomIdRouteWithChildren
  '/symptoms': typeof SymptomsIndexRoute
  '/symptoms/$symptomId/$severity': typeof SymptomsSymptomIdSeverityRoute
}
export interface FileRoutesByTo {
  '/': typeof IndexRoute
  '/symptoms/$symptomId': typeof SymptomsSymptomIdRouteWithChildren
  '/symptoms': typeof SymptomsIndexRoute
  '/symptoms/$symptomId/$severity': typeof SymptomsSymptomIdSeverityRoute
}
export interface FileRoutesById {
  __root__: typeof rootRouteImport
  '/': typeof IndexRoute
  '/symptoms/$symptomId': typeof SymptomsSymptomIdRouteWithChildren
  '/symptoms/': typeof SymptomsIndexRoute
  '/symptoms/$symptomId/$severity': typeof SymptomsSymptomIdSeverityRoute
}
export interface FileRouteTypes {
  fileRoutesByFullPath: FileRoutesByFullPath
  fullPaths:
    | '/'
    | '/symptoms/$symptomId'
    | '/symptoms'
    | '/symptoms/$symptomId/$severity'
  fileRoutesByTo: FileRoutesByTo
  to:
    | '/'
    | '/symptoms/$symptomId'
    | '/symptoms'
    | '/symptoms/$symptomId/$severity'
  id:
    | '__root__'
    | '/'
    | '/symptoms/$symptomId'
    | '/symptoms/'
    | '/symptoms/$symptomId/$severity'
  fileRoutesById: FileRoutesById
}
export interface RootRouteChildren {
  IndexRoute: typeof IndexRoute
  SymptomsSymptomIdRoute: typeof SymptomsSymptomIdRouteWithChildren
  SymptomsIndexRoute: typeof SymptomsIndexRoute
}

declare module '@tanstack/react-router' {
  interface FileRoutesByPath {
    '/': {
      id: '/'
      path: '/'
      fullPath: '/'
      preLoaderRoute: typeof IndexRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/symptoms/': {
      id: '/symptoms/'
      path: '/symptoms'
      fullPath: '/symptoms'
      preLoaderRoute: typeof SymptomsIndexRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/symptoms/$symptomId': {
      id: '/symptoms/$symptomId'
      path: '/symptoms/$symptomId'
      fullPath: '/symptoms/$symptomId'
      preLoaderRoute: typeof SymptomsSymptomIdRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/symptoms/$symptomId/$severity': {
      id: '/symptoms/$symptomId/$severity'
      path: '/$severity'
      fullPath: '/symptoms/$symptomId/$severity'
      preLoaderRoute: typeof SymptomsSymptomIdSeverityRouteImport
      parentRoute: typeof SymptomsSymptomIdRoute
    }
  }
}

interface SymptomsSymptomIdRouteChildren {
  SymptomsSymptomIdSeverityRoute: typeof SymptomsSymptomIdSeverityRoute
}

const SymptomsSymptomIdRouteChildren: SymptomsSymptomIdRouteChildren = {
  SymptomsSymptomIdSeverityRoute: SymptomsSymptomIdSeverityRoute,
}

const SymptomsSymptomIdRouteWithChildren =
  SymptomsSymptomIdRoute._addFileChildren(SymptomsSymptomIdRouteChildren)

const rootRouteChildren: RootRouteChildren = {
  IndexRoute: IndexRoute,
  SymptomsSymptomIdRoute: SymptomsSymptomIdRouteWithChildren,
  SymptomsIndexRoute: SymptomsIndexRoute,
}
export const routeTree = rootRouteImport
  ._addFileChildren(rootRouteChildren)
  ._addFileTypes<FileRouteTypes>()
